import com.amazonaws.auth.AWSStaticCredentialsProvider
import com.amazonaws.auth.BasicAWSCredentials
import com.amazonaws.services.s3.AmazonS3ClientBuilder
import com.amazonaws.services.s3.model.Bucket
import hudson.model.*
import jenkins.model.*

// Define the credentials ID used in Jenkins
def credentialsId = 'accessAndSecretKeys' // Replace with your actual AWS credentials ID

// Fetch the AWS credentials from Jenkins
def creds = com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials(
    com.cloudbees.jenkins.plugins.awscredentials.AWSCredentialsImpl.class,
    jenkins.model.Jenkins.instance,
    null,
    null
).find { it.id == credentialsId }

if (creds == null) {
    throw new RuntimeException("AWS credentials not found in Jenkins with ID: ${credentialsId}")
}

// Extract AWS access key and secret key from the credentials
def awsAccessKey = creds.accessKey
def awsSecretKey = creds.secretKey.plainText
def region = 'us-east-1' // Define the AWS region

// Initialize the S3 client
def credentials = new BasicAWSCredentials(awsAccessKey, awsSecretKey)
def s3Client = AmazonS3ClientBuilder.standard()
    .withCredentials(new AWSStaticCredentialsProvider(credentials))
    .withRegion(region)
    .build()

// Fetch the list of S3 buckets
List<Bucket> buckets = s3Client.listBuckets()
List hello = []
// Return the list of bucket names
hello = buckets.collect { it.getName() }
return hello

